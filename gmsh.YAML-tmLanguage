# [PackageDev] target_format: plist, ext: tmLanguage
---
name: gmsh
scopeName: source.gmsh
fileTypes: [msh, geo]
uuid: b095c611-75c4-4280-af1f-72c1cac74826

patterns:
## first, match the global stuff
- name: entity.other.document-start.gmsh
  match: ^---(?= |$)

- name: entity.other.document-end.gmsh
  match: ^\.{3}$

- include: '#MultipleLineComments'
- include: '#LineComments'
- include: '#GmshFunctions'
- include: '#ExpressionFunctions'
- include: '#NormalFunctions'
- include: '#SelfFunctions'

# main scope
- include: '#Strings'
- include: '#Chars'
- include: '#Expression'
- include: '#Constants'
- include: '#OperatorKeywords'
- include: '#ControlKeywords'
- include: '#OtherKeywords'
- include: '#OtherConstants'
- include: '#Variable'

# everything else should remain unmatched
# - include: '#illegal'

#######################################

repository:

# control sequences
  MultipleLineComments:
    name: comment.block.gmsh
    begin: (/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*)
    end: (\*+/)

  LineComments:
    match: (//.*)
    captures:
      '1': {name: comment.line.number-sign.gmsh}
      '2': {name: punctuation.definition.comment.line.gmsh}


# special keys (main scope)

  ExpressionFunctions:
    begin: (\b(Show|Hide|AdaptMesh|CombinedBoundary|Boundary|Extrude|Translate|BoundingBox|Duplicata|Rotate|Dilate|Symmetry|Transfinite\s+Surface|Recombine\s+Surface|Transfinite\s+Line))(\s*(\{))
    beginCaptures:
      '0': {name: support.function.gmsh}
    patterns:
    - include: '#GmshFunctions'
    - include: '#Expression'
    - include: '#Strings'
    end: (\s*(\}))
    endCaptures:
      '0': {name: support.function.gmsh}

  SelfFunctions:
    name: keyword.other.gmsh
    match: (\b(RelocateMesh|SetOrder|Print|Sleep|SyatemCall|NonBlockingSystemCall|SetName|SyncModel|Macro|NewModel|Include|RefineMesh|Draw|Merge|Delete|BoundingBox|SetChanged|Show|Hide|CombinedBoundary|Boundary|Coherence|Transfinite\s+Line|Transfinite\s+Surface|Recombine\s+Surface|Recombine|)\b)

  NormalFunctions:
    begin: (\b(SetNumber|SetString|Acos|Asin|Atan|Atan2|Ceil|Cos|Cosh|Exp|Fabs|Fmod|Floor|Hypot|Log|Log10|Modulo|Rand|Round|Sqrt|Sin|Sinh|Tan|Tanh|Delete|Compound\s+Line|Compound\s+Surface|Compound\s+Volume|Split\s+Line|Physical\s+Point|Physical\s+Line|Physical\s+Surface|Physical\s+Volume)(\s*\())
    beginCaptures:
      '0': {name: support.function.gmsh}
    patterns:
    - include: '#Functions'
    - include: '#Expression'
    - include: '#Strings'
    - include: '#gmshSyntaxing'
    end: (\s*(\)))
    endCaptures:
      '0': {name: support.function.gmsh}
   
  Strings:
    name: string.quoted.double.gmsh
    match:  \"((\\\")*[^$\"])*\"

  Chars:
    name: string.quoted.single.gmsh
    match:  \'((\\\')*[^\'])*\'

  gmshTag:
    name: keyword.other.gmsh
    match: \s*(Phy#|Enty#)\s*

  PhysicalGroupTag:
    name: keyword.other.gmsh
    match: (\s*\$.*\$\s*) 

  Expression:
    patterns:
    - include: '#LineComments'
    - include: '#MultipleLineComments'
    - include: '#Constants'
    - include: '#SelfFunctions'
    - include: '#OperatorKeywords'
    - include: '#ControlKeywords'
    - include: '#OtherKeywords'
    - include: '#OtherConstants'
    - include: '#Variable'

  Constants:
    name: constant.numeric.gmsh
    match: \b(GMSH_MAJOR_VERSION|GMSH_MINOR_VERSION|GMSH_PATCH_VERSION|MPI_Size|MPI_Rank|Cpu|Memory|TotalMemory|lc|Pi|newp|newl|news|newv|newll|newsl|newreg|(-)?[0-9.]+|(-)?[0-9.]+e(-)?[0-9.]+)\b

  OperatorKeywords:
    name: keyword.operator.gmsh
    match: \s*(-|!|\+\+|--|\^|\*|%|\+|-|=|==|\+=|-=|\*=|/=|!=|>|>=|<|<=|&&|\|\||\?|:|#)\s*

  ControlKeywords:
    name: keyword.control.gmsh
    match: \b(Include|Error|Printf|Exit|Abort|Call|Return|ElseIf|For|In|EndFor|If|EndIf|Else)\s*

  OtherKeywords:
    name: function.constant.gmsh
    match: \b((Layers|Point|Spline|CatmullRom|Circle|Ellipse|BSpline|Ruled\s+Surface|Plane\s+Surface|Volume|Line\s+Loop|Line|Surface\s+Loop|Surface))\b

  OtherConstants:
    name: keyword.other.gmsh
    match: \b(Mesh.SubdivisionAlgorithm|Physicals|Variables|Options|TotalMemory|Memory|Cpu|Pi|GMSH_MAJOR_VERSION|GMSH_MINOR_VERSION|GMSH_PATCH_VERSION|MPI_Size|MPI_Rank)\b

  Variable:
    name: variable.parameter.gmsh
    match:  ([a-zA-Z_][a-zA-Z0-9]*)

  GmshFunctions:
    patterns:
    - include: '#ExpressionFunctions'
    - include: '#NormalFunctions'
    - include: '#SelfFunctions'

  illegal:
    name: invalid.illegal.unrecognized.gmsh
    match: '[^\s}]'
...